scalar BigInt

"""Date (isoformat)"""
scalar Date

"""Decimal (fixed-point)"""
scalar Decimal

type FaucetError {
  code: String!
  message: String!
  value: String
}

input FaucetPayloadType {
  address: String!
  amount: Decimal!
}

union FaucetResponse = FaucetError | FaucetStatus

type FaucetStatus {
  txHash: String!
}

type Mutation {
  faucet(payload: FaucetPayloadType!): FaucetResponse!
  uploadMetadata(payload: PayloadType!): UploadMetadataQL
}

input PayloadType {
  description: String = null
  displayName: String = null
  image: String = null
}

type Query {
  publicKeysValidation(publicKeys: [String!]!): Boolean!
  swiseStats: SwiseStatsQL!
  vaults(blacklisted: Boolean = null, first: Int = null, id: String = "", skip: Int = null): [VaultQL!]!
}

type SwiseStatsQL {
  price: Decimal!
}

type UploadMetadataQL {
  ipfsHash: String!
}

type VaultQL {
  blacklisted: Boolean
  id: String!
  validators: [VaultValidatorQL!]
}

type VaultValidatorQL {
  apr: Decimal
  createdAt: Date!
  earned: BigInt
  publicKey: String!
}